version: "3.7"

networks:
  proxy:

services:
  traefik:
    image: "traefik:1.7.2-alpine"
    container_name: "traefik"
    ports:
      - "80:80" # - Default Port
      - "443:443" # - SSL Port
      - "31951:31951" # - Mapproxy
      - "8000:8000" # - Traefik UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/config/traefik.toml:/etc/traefik/traefik.toml
      - ./app/config/ssl:/ssl
    labels:
      - "traefik.backend=traefik"
      - "traefik.frontend.entryPoints=traefik-ui"
      - "traefik.frontend.rule=Host:localhost;"
      - "traefik.port=8080"
      - "traefik.enable=true"
    networks:
      proxy:

  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./app/client
    image: goat-client
    volumes:
      - /app/node_modules
      - ./app/client:/app
    container_name: goat-client
    labels:
      - "traefik.backend=client"
      - "traefik.frontend.entryPoints=https,http"
      - "traefik.frontend.rule=Host:localhost;"
      - "traefik.port=5000"
      - "traefik.enable=true"
    networks:
      proxy:

  api:
    build:
      context: ./app/api
    image: goat-api
    volumes:
      - /app/node_modules
      - ./app/api:/app
    container_name: goat-api
    labels:
      - "traefik.backend=api"
      - "traefik.frontend.entryPoints=https,http"
      - "traefik.frontend.rule=Host:localhost;PathPrefix:/api"
      - "traefik.port=3000"
      - "traefik.enable=true"
    networks:
      proxy:

  geoserver:
    image: kartoza/geoserver:2.15.0
    volumes:
      - ./app/geoserver/geoserver_data:/opt/geoserver/data_dir
    container_name: goat-geoserver
    restart: on-failure
    depends_on:
      - db
    env_file:
      - ./app/config/docker-env/geoserver.env
    labels:
      - "traefik.backend=geoserver"
      - "traefik.frontend.entryPoints=https,http"
      - "traefik.frontend.rule=Host:localhost;PathPrefix:/geoserver"
      - "traefik.port=8080"
      - "traefik.enable=true"
    networks:
      proxy:

  db:
    image: eliaspajares/goat-database:latest
    container_name: goat-database
    restart: on-failure
    volumes:
      - ./app/database/postgres_data:/var/lib/postgresql
      - ./app/database:/opt
    environment:
      - POSTGRES_DB=goat
      - POSTGRES_USER=goat
      - ALLOW_IP_RANGE=0.0.0.0/0
    env_file:
      - ./app/config/docker-env/db.env
    ports:
      - "65432:5432"
    networks:
      proxy:

  db-dbbackups:
    image: kartoza/pg-backup:11.0
    container_name: goat-database-backup
    volumes:
      - ./app/database/backups:/backups
    env_file:
      - ./app/config/docker-env/db-backups.env
    restart: on-failure
    depends_on:
      - db
    networks:
      proxy:

  print:
    image: camptocamp/mapfish_print:3.16
    volumes:
      - ./app/print/templates:/usr/local/tomcat/webapps/ROOT/print-apps
    container_name: goat-print
    labels:
      - "traefik.backend=print"
      - "traefik.frontend.entryPoints=https,http"
      - "traefik.frontend.rule=Host:localhost;PathPrefix:/print"
      - "traefik.port=8080"
      - "traefik.enable=true"
    networks:
      proxy:

  mapproxy:
    image: kartoza/mapproxy
    volumes:
      - ./app/mapproxy:/mapproxy
    container_name: goat-mapproxy
    labels:
      - "traefik.backend=mapproxy"
      - "traefik.frontend.entryPoints=mapproxy"
      - "traefik.frontend.rule=Host:localhost;"
      - "traefik.port=8080"
      - "traefik.enable=true"
    networks:
      proxy:
