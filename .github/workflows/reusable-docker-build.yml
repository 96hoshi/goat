---
name: Docker Build and Push
on:
  workflow_call:
    inputs:
      comment-enable:
        description: Create a PR comment with image tags and labels
        required: false
        default: false
        type: boolean
      context:
        description: Docker build context
        required: false
        type: string
      file:
        description: Dockerfile path relative to context
        required: false
        type: string
      target:
        description: Target build stage in Dockerfile
        required: false
        type: string
      image-name:
        description: Docker image name to build
        required: true
        type: string
        default: ghcr.io/${{ github.repository }}
      platforms:
        description: Platforms to build for (comma-separated)
        required: false
        type: string
        default: linux/amd64
      push:
        description: Push image to registry
        required: false
        default: true
        type: boolean
      dockerhub-enable:
        description: Enable Docker Hub login
        required: false
        default: false
        type: boolean
      ghcr-enable:
        description: Enable GHCR login
        required: false
        default: true
        type: boolean
      flavor-rules:
        description: Flavor rules for docker/metadata-action
        required: false
        type: string
        default: |
          latest=auto
      tag-rules:
        description: Tag rules for docker/metadata-action
        required: false
        type: string
        default: |
          type=raw,value={{sha}}
          type=ref,event=tag,priority=200
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }},priority=100
          type=ref,event=pr,priority=100
    secrets:
      dockerhub-username:
        description: Docker Hub username
        required: false
      dockerhub-token:
        description: Docker Hub token
        required: false

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-latest
    steps:
      - name: 📥 Prepare safe platform name
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Login to DockerHub
        if: inputs.dockerhub-enable
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}

      - name: 📦 Login to GHCR
        if: inputs.ghcr-enable
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          flavor: ${{ inputs.flavor-rules }}
          tags: ${{ inputs.tag-rules }}

      - name: 🐳 Build and Push per-platform (digest only)
        id: build
        uses: docker/build-push-action@v5
        with:
          provenance: false
          platforms: ${{ matrix.platform }}
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          target: ${{ inputs.target }}
          push: true
          outputs: type=image,name=${{ inputs.image-name }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha,scope=build-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,mode=max,scope=build-${{ env.PLATFORM_PAIR }}

      - name: 📤 Export digest
        run: |
          mkdir -p /tmp/digests/${{ env.PLATFORM_PAIR }}
          digest="${{ steps.build.outputs.digest }}"
          echo "$digest" > /tmp/digests/${{ env.PLATFORM_PAIR }}/digest.txt

      - name: 📤 Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/${{ env.PLATFORM_PAIR }}/*
          retention-days: 1

      # --- PR Comment Support ---
      - name: 💬 Find existing PR comment
        if: github.event_name == 'pull_request' && inputs.comment-enable
        id: fc
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: "📦 Docker image tags pushed"

      - name: 💬 Create or update PR comment
        if: github.event_name == 'pull_request' && inputs.comment-enable
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            📦 Docker image tags pushed:

            ```text
            ${{ steps.meta.outputs.tags }}
            ```

            🏷 Labels added to images:

            ```text
            ${{ steps.meta.outputs.labels }}
            ```

      - name: 🏷 Output primary image tag
        id: image-tag
        run: echo "image-tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.push
    steps:
      - name: 📥 Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - uses: docker/setup-buildx-action@v3

      - name: 🐳 Login to DockerHub
        if: inputs.dockerhub-enable
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}

      - name: 📦 Login to GHCR
        if: inputs.ghcr-enable
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          flavor: ${{ inputs.flavor-rules }}
          tags: ${{ inputs.tag-rules }}

      - name: 🐳 Create and push multi-arch manifest
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(find . -type f -name digest.txt -exec awk '{print "${{ inputs.image-name }}@"$1}' {} \;)

      - name: 🐳 Inspect image
        run: docker buildx imagetools inspect ${{ inputs.image-name }}:${{ steps.meta.outputs.version }}
