name: "Lint"
on:
  workflow_call:
    inputs:
      web:
        type: boolean
        description: "Whether to run web linting"
        required: false
        default: true

      python:
        type: boolean
        description: "Whether to run python linting"
        required: false
        default: true

jobs:
  lint-web:
    runs-on: ubuntu-latest
    if: ${{ inputs.web }}
    steps:
      - name: 游닌 Checkout
        uses: actions/checkout@v4

      - name: 游닌 Checkout PR
        uses: goat-community/.github/.github/actions/pr-git-checkout@main

      - name: 游닌 Monorepo install
        uses: goat-community/.github/.github/actions/pnpm-install@main
        with:
          enable-corepack: true
          cwd: ${{ github.workspace }}

      - name: 游댧 Run Linting with Reports
        run: pnpm run lint:report
        continue-on-error: true

      - name: 游댧 Merge lint reports
        run: jq -s '[.[]]|flatten' lint-results/*.json &> lint-results/eslint_report.json

      - name: 游댧 Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          report-json: ${{ github.workspace }}/lint-results/eslint_report.json
          only-pr-files: false

      - name: 游댧 Upload ESLint report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: ${{ github.workspace }}/lint-results

  lint-python:
    runs-on: ubuntu-latest
    if: ${{ inputs.python }}
    steps:
      - name: 游닌 Checkout
        uses: actions/checkout@v4

      - name: 游닌 Checkout PR
        uses: goat-community/.github/.github/actions/pr-git-checkout@main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"
          enable-cache: true

      - run: uv run bash scripts/lint.sh
        working-directory: backend
