--- /usr/local/lib/python3.9/site-packages/fastapi/utils.py	2022-09-03 08:52:16.564298945 +0000
+++ utils.py	2022-09-03 09:41:02.466248000 +0000
@@ -3,6 +3,7 @@
 from dataclasses import is_dataclass
 from enum import Enum
 from typing import Any, Dict, Optional, Set, Type, Union, cast
+from weakref import WeakKeyDictionary
 
 import fastapi
 from fastapi.datastructures import DefaultPlaceholder, DefaultType
@@ -72,11 +73,13 @@
 def create_cloned_field(
     field: ModelField,
     *,
-    cloned_types: Optional[Dict[Type[BaseModel], Type[BaseModel]]] = None,
+    cloned_types: Optional[Dict[Type[BaseModel], Type[BaseModel]]] = WeakKeyDictionary(),
 ) -> ModelField:
-    # _cloned_types has already cloned types, to support recursive models
+    # cloned_types caches already cloned types to support recursive models and improve
+    # performance by avoiding unecessary cloning
     if cloned_types is None:
-        cloned_types = dict()
+        cloned_types = WeakKeyDictionary()
+
     original_type = field.type_
     if is_dataclass(original_type) and hasattr(original_type, "__pydantic_model__"):
         original_type = original_type.__pydantic_model__
