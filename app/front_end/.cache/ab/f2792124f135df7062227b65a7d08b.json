{"id":"node_modules/ol/format/filter/Intersects.js","dependencies":[{"name":"/home/vagrant/app/front_end/node_modules/ol/format/filter/Intersects.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/vagrant/app/front_end/package.json","includedInParent":true,"mtime":1539431855948},{"name":"/home/vagrant/app/front_end/node_modules/ol/package.json","includedInParent":true,"mtime":1539376187216},{"name":"../filter/Spatial.js","loc":{"line":4,"column":20},"parent":"/home/vagrant/app/front_end/node_modules/ol/format/filter/Intersects.js","resolved":"/home/vagrant/app/front_end/node_modules/ol/format/filter/Spatial.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Spatial = _interopRequireDefault(require(\"../filter/Spatial.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/format/filter/Intersects\n */\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if (Spatial) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create(Spatial && Spatial.prototype);\n  Intersects.prototype.constructor = Intersects;\n  return Intersects;\n}(_Spatial.default);\n\nvar _default = Intersects;\nexports.default = _default;","map":{"mappings":[{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":6},"generated":{"line":22,"column":4}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":16},"generated":{"line":22,"column":14}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":22,"column":17}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":22,"column":27}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":22,"column":34}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":22,"column":36}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":0}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":11}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":21}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":14},"generated":{"line":23,"column":22}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":34}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":28},"generated":{"line":23,"column":36}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":44}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":38},"generated":{"line":23,"column":46}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":2},"generated":{"line":23,"column":57}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":20,"column":51},"generated":{"line":23,"column":59}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":0}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":4}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":11}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":12}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":16}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":21,"column":9},"generated":{"line":24,"column":17}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":21}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":21,"column":10},"generated":{"line":24,"column":23}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":35}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":21,"column":24},"generated":{"line":24,"column":37}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":49}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":21,"column":38},"generated":{"line":24,"column":51}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":59}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":21,"column":48},"generated":{"line":24,"column":61}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":"super","original":{"line":21,"column":4},"generated":{"line":24,"column":72}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":22,"column":3},"generated":{"line":29,"column":12}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":22,"column":3},"generated":{"line":29,"column":13}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":22,"column":3},"generated":{"line":29,"column":23}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":22,"column":3},"generated":{"line":29,"column":37}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":31,"column":1}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":25},"generated":{"line":31,"column":2}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":32},"generated":{"line":31,"column":18}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":12,"column":0},"generated":{"line":31,"column":19}},{"source":"../../../../src/ol/format/filter/Intersects.js","name":null,"original":{"line":26,"column":15},"generated":{"line":33,"column":15}}],"sources":{"../../../../src/ol/format/filter/Intersects.js":"/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nclass Intersects extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Intersects', geometryName, geometry, opt_srsName);\n  }\n\n}\n\nexport default Intersects;\n"},"lineCount":null}},"hash":"8c8ce306daa8136b5cf92e9217136354","cacheData":{"env":{}}}