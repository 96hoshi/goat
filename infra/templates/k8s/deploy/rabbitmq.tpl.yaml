apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goat-rabbitmq
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goat-rabbitmq
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        app: goat-rabbitmq
    spec:
      hostname: goat-${NAMESPACE}-rabbitmq
      containers:
        - image: goatcommunity/rabbitmq:latest
          imagePullPolicy: Always
          name: goat-rabbitmq
          envFrom:
            - configMapRef:
                name: goat-rabbitmq-config
          ports:
            - containerPort: 5672
              name: rabbitmq
            - containerPort: 15672
              name: rabbitmq-mgmt
---
apiVersion: v1
kind: Service
metadata:
  name: goat-rabbitmq-service
  namespace: ${NAMESPACE}
spec:
  ports:
    - port: 5672
      targetPort: 5672
  type: NodePort
  selector:
    app: goat-rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: goat-rabbitmq-management-service
  namespace: ${NAMESPACE}
spec:
  ports:
    - port: 15672
      targetPort: 15672
  type: NodePort
  selector:
    app: goat-rabbitmq
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: goat-rabbitmq-config
  namespace: ${NAMESPACE}
  labels:
    app: goat-rabbitmq
data:
  RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  RABBITMQ_DEFAULT_VHOST: goat
  RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management path_prefix "/rabbitmq"